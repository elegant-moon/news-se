{"version":3,"sources":["components/Categories.js","components/NewsItem.js","components/NewsList.js","lib/usePromise.js","pages/NewsPage.js","App.js","serviceWorker.js","index.js"],"names":["categories","name","text","CategoriesBlock","styled","div","_templateObject","Category","NavLink","_templateObject2","Categories","_ref","onSelect","react_default","a","createElement","map","c","key","activeClassName","exact","to","concat","NewsItemBlock","NewsItem_templateObject","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","NewsListBlock","NewsList_templateObject","NewsList","category","_usePromise","promiseCreator","deps","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","resolved","setResolved","_useState5","_useState6","error","setError","useEffect","asyncToGenerator","regenerator_default","mark","_callee","_resolved","wrap","_context","prev","next","sent","t0","stop","apply","this","arguments","process","usePromise","query","axios","get","_usePromise2","response","articles","data","components_NewsItem","NewsPage","match","params","Fragment","components_Categories","components_NewsList","App","react_router","path","component","Boolean","window","location","hostname","ReactDOM","render","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1eaf8bcb.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst categories = [\r\n  {\r\n    name: 'all',\r\n    text: 'all',\r\n  },\r\n  {\r\n    name: 'business',\r\n    text: 'business',\r\n  },\r\n  {\r\n    name: 'entertainment',\r\n    text: 'entertainment',\r\n  },\r\n  {\r\n    name: 'health',\r\n    text: 'health',\r\n  },\r\n  {\r\n    name: 'science',\r\n    text: 'science',\r\n  },\r\n  {\r\n    name: 'sports',\r\n    text: 'sports',\r\n  },\r\n  {\r\n    name: 'technology',\r\n    text: 'technology',\r\n  },\r\n];\r\n\r\nconst CategoriesBlock = styled.div`\r\n  display: flex;\r\n  padding: 1rem;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n`;\r\n\r\nconst Category = styled(NavLink)`\r\n  font-size: 1.125rem;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  padding-bottom: 0.25rem;\r\n\r\n  &:hover {\r\n    color: #495057;\r\n  }\r\n\r\n  &.active {\r\n    font-weight: 600;\r\n    border-bottom: 2px solid #22b8cf;\r\n    color: #22b8cf;\r\n    &:hover {\r\n      color: #3bc9db;\r\n    }\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\nconst Categories = ({ onSelect }) => {\r\n  return (\r\n    <CategoriesBlock>\r\n      {categories.map(c => (\r\n        <Category\r\n          key={c.name}\r\n          activeClassName=\"active\"\r\n          exact={c.name === 'all'}\r\n          to={c.name === 'all' ? '/' : `/${c.name}`}\r\n        >\r\n          {c.text}\r\n        </Category>\r\n      ))}\r\n    </CategoriesBlock>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NewsItemBlock = styled.div`\r\n  display: flex;\r\n\r\n  .thumbnail {\r\n    margin-right: 1rem;\r\n    img {\r\n      display: block;\r\n      width: 160px;\r\n      height: 100px;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n  .contents {\r\n    h2 {\r\n      margin: 0;\r\n      a {\r\n        color: black;\r\n      }\r\n    }\r\n    p {\r\n      margin: 0;\r\n      line-height: 1.5;\r\n      margin-top: 0.5rem;\r\n      white-space: normal;\r\n    }\r\n  }\r\n  & + & {\r\n    margin-top: 3rem;\r\n  }\r\n`;\r\nconst NewsItem = ({ article }) => {\r\n  const { title, description, url, urlToImage } = article;\r\n  return (\r\n    <NewsItemBlock>\r\n      {urlToImage && (\r\n        <div className=\"thumbnail\">\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src={urlToImage} alt=\"thumbnail\" />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"contents\">\r\n        <h2>\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {title}\r\n          </a>\r\n        </h2>\r\n        <p>{description}</p>\r\n      </div>\r\n    </NewsItemBlock>\r\n  );\r\n};\r\n\r\nexport default NewsItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport NewsItem from './NewsItem';\r\nimport axios from 'axios';\r\nimport usePromise from '../lib/usePromise';\r\n\r\nconst NewsListBlock = styled.div`\r\n  box-sizing: border-box;\r\n  padding-bottom: 3rem;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  margin-top: 2rem;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n  }\r\n`;\r\n\r\nconst NewsList = ({ category }) => {\r\n  const [loading, response, error] = usePromise(() => {\r\n    const query = category === 'all' ? '' : `&category=${category}`;\r\n    return axios.get(\r\n      `https://newsapi.org/v2/top-headlines?country=se${query}&apiKey=2cb3ded70ffa41eb8c2dd361b5d57399`,\r\n    );\r\n  }, [category]);\r\n\r\n  // loading ...\r\n  if (loading) {\r\n    return <NewsListBlock>loading ...</NewsListBlock>;\r\n  }\r\n  // no response\r\n  if (!response) {\r\n    return null;\r\n  }\r\n\r\n  // error?\r\n  if (error) {\r\n    return <NewsListBlock>Error!</NewsListBlock>;\r\n  }\r\n\r\n  // response yes\r\n  const { articles } = response.data;\r\n  return (\r\n    <NewsListBlock>\r\n      {articles.map(article => (\r\n        <NewsItem key={article.url} article={article} />\r\n      ))}\r\n    </NewsListBlock>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function usePromise(promiseCreator, deps) {\r\n  // loading / done / error state\r\n  const [loading, setLoading] = useState(false);\r\n  const [resolved, setResolved] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const process = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const resolved = await promiseCreator();\r\n        setResolved(resolved);\r\n      } catch (e) {\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    process();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, deps);\r\n\r\n  return [loading, resolved, error];\r\n}\r\n","import React from 'react';\r\nimport Categories from '../components/Categories';\r\nimport NewsList from '../components/NewsList';\r\n\r\nconst NewsPage = ({ match }) => {\r\n  // if no category, then use all\r\n  const category = match.params.category || 'all';\r\n\r\n  return (\r\n    <>\r\n      <Categories />\r\n      <NewsList category={category} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsPage;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport NewsPage from './pages/NewsPage';\r\n\r\nconst App = () => {\r\n  return <Route path=\"/:category?\" component={NewsPage} />;\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}